import {
  SettingsReducerTypes,
  SettingsState,
  ThemeSetting,
} from 'src/@types/types';

export const INVISIBLE = [
  'U+0009',
  'U+0020',
  'U+00A0',
  'U+00AD',
  'U+034F',
  'U+061C',
  'U+115F',
  'U+1160',
  'U+17B4',
  'U+17B5',
  'U+180E',
  'U+2000',
  'U+2001',
  'U+2002',
  'U+2003',
  'U+2004',
  'U+2005',
  'U+2006',
  'U+2007',
  'U+2008',
  'U+2009',
  'U+200A',
  'U+200B',
  'U+200C',
  'U+200D',
  'U+200E',
  'U+200F',
  'U+202F',
  'U+205F',
  'U+2060',
  'U+2061',
  'U+2062',
  'U+2063',
  'U+2064',
  'U+206A',
  'U+206B',
  'U+206C',
  'U+206D',
  'U+206E',
  'U+206F',
  'U+3000',
  'U+2800',
  'U+3164',
  'U+FEFF',
  'U+FFA0',
  'U+1D159',
  'U+1D173',
  'U+1D174',
  'U+1D175',
  'U+1D176',
  'U+1D177',
  'U+1D178',
  'U+1D179',
  'U+1D17A',
];

export const URI_RESERVED = [
  ':',
  '/',
  '?',
  '#',
  '[',
  ']',
  '@',
  '!',
  '$',
  '&',
  "'",
  '(',
  ')',
  '*',
  '+',
  ',',
  ';',
  '=',
];

export const URI_UNSAFE = ['"', '<', '>', '%', '{', '}', '|', '\\', '^', '`'];

export const BAD_WORDS = [
  'disobedient',
  'annoying',
  'misbehaved',
  'wayward',
  'defiant',
  'unruly',
  'insubordinate',
  'delinquent',
  'disorderly',
  'mutinous',
  'fractious',
  'recalcitrant',
  'errant',
  'wild',
  'wicked',
  'obstreperous',
  'troublesome',
  'attention-seeking',
  'exasperating',
  'incorrigible',
  'rude',
  'impolite',
  'mischievous',
  'rascally',
  'brattish',
  'scampish',
  'crude',
  'obscene',
  'rude',
  'bawdy',
  'dirty',
  'filthy',
  'indecent',
  'improper',
  'unseemly',
  'offensive',
  'naughty',
  'saucy',
  'boorish',
  'loutish',
  'oafish',
  'brutish',
  'uncouth',
  'unsavory',
  'crass',
  'unrefined',
  'unsophisticated',
  'tasteless',
  'cloddish',
  'slobbish',
  'yobbish',
];

export const SETTINGS_TEXT = {
  shortcuts: {
    modifierKey: 'modifier',
    copy: 'copy output',
    save: 'save',
    clear: 'clear input',
    settings: 'open settings',
  },
  invisibleChar: 'invisible characters',
  uriReserved: 'uri reserved characters',
  uriUnsafe: 'uri unsafe characters',
  outputLength: 'length',
  trim: 'trim whitespace',
  findReplace: 'find',
};

export const INITIAL_SETTINGS_STATE = {
  userAgent: '',
  theme: ThemeSetting.LIGHT,
  // shortcuts: [
  //   {
  //     name: 'modifierKey',
  //     text: SETTINGS_TEXT.shortcuts.modifierKey,
  //     key: 'Control',
  //   },
  //   { name: 'copy', text: SETTINGS_TEXT.shortcuts.copy, key: 'c' },
  //   { name: 'save', text: SETTINGS_TEXT.shortcuts.save, key: 's' },
  //   { name: 'clear', text: SETTINGS_TEXT.shortcuts.clear, key: 'esc' },
  //   {
  //     name: 'openDrawer',
  //     text: SETTINGS_TEXT.shortcuts.settings,
  //     key: 'm',
  //   },
  // ],
  outputValidation: {
    invisibleChar: {
      label: SETTINGS_TEXT.invisibleChar,
      helperText: null,
      isActive: false,
      dispatchType: SettingsReducerTypes.INVISIBLE,
      value: 0,
    },

    uriReserved: {
      label: SETTINGS_TEXT.uriReserved,
      helperText: null,
      isActive: false,
      dispatchType: SettingsReducerTypes.URI_RESERVED,
      value: 0,
    },
    uriUnsafe: {
      label: SETTINGS_TEXT.uriUnsafe,
      helperText: null,
      isActive: false,
      dispatchType: SettingsReducerTypes.URI_UNSAFE,
      value: 0,
    },

    outputLength: {
      label: SETTINGS_TEXT.outputLength,
      helperText: null,
      isActive: false,
      dispatchType: SettingsReducerTypes.LENGTH,
      value: 0,
    },
    trim: {
      label: SETTINGS_TEXT.trim,
      isActive: false,
      value: 0,
      helperText: null,

      dispatchType: SettingsReducerTypes.TRIM,
    },

    findReplace: {
      label: SETTINGS_TEXT.findReplace,
      helperText: null,
      isActive: false,
      dispatchType: SettingsReducerTypes.FIND,
      value: 0,
    },
  },
} as SettingsState;
